import{_ as t,c as l,l as e,a as r,o as s}from"./chunks/framework.DvDe3FMx.js";const g=JSON.parse('{"title":"总结","description":"","frontmatter":{"title":"总结","customTag":"algorithms>算法>贪心","date":"2024.06.13","editLink":true},"headers":[],"relativePath":"algorithms/algorithms/greedy/summary.md","filePath":"algorithms/algorithms/greedy/summary.md","lastUpdated":1736902251000}'),i={name:"algorithms/algorithms/greedy/summary.md"};function o(n,a,m,d,u,c){return s(),l("div",null,a[0]||(a[0]=[e("h1",{id:"总结",tabindex:"-1"},[r("总结 "),e("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),e("ul",null,[e("li",null,"贪心算法通常用于解决最优化问题，其原理是在每个决策阶段都做出局部最优的决策，以期获得全局最优解。"),e("li",null,"贪心算法会迭代地做出一个又一个的贪心选择，每轮都将问题转化成一个规模更小的子问题，直到问题被解决。"),e("li",null,"贪心算法不仅实现简单，还具有很高的解题效率。相比于动态规划，贪心算法的时间复杂度通常更低。"),e("li",null,"适合用贪心算法求解的问题具有两大性质：贪心选择性质和最优子结构。贪心选择性质代表贪心策略的有效性。"),e("li",null,"对于某些复杂问题，贪心选择性质的证明并不简单。相对来说，证伪更加容易，例如零钱兑换问题。"),e("li",null,"求解贪心问题主要分为三步：问题分析、确定贪心策略、正确性证明。其中，确定贪心策略是核心步骤，正确性证明往往是难点。")],-1)]))}const p=t(i,[["render",o]]);export{g as __pageData,p as default};
