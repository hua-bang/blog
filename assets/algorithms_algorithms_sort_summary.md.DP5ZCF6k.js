import{_ as t,c as d,o as r,a3 as a}from"./chunks/framework.CTb8yYtd.js";const g=JSON.parse('{"title":"小结","description":"","frontmatter":{"title":"小结","customTag":"algorithms>算法>排序","date":"2024.05.22","editLink":true},"headers":[],"relativePath":"algorithms/algorithms/sort/summary.md","filePath":"algorithms/algorithms/sort/summary.md","lastUpdated":1720656057000}'),n={name:"algorithms/algorithms/sort/summary.md"},o=a('<h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h1><p>目前，我们已经把常用的排序方式进行了实现</p><p>具体如下</p><table><thead><tr><th>排序方式</th><th>描述</th><th>时间复杂度（平均）</th><th>时间复杂度（最坏）</th><th>时间复杂度（最好）</th><th>空间复杂度</th></tr></thead><tbody><tr><td>冒泡排序</td><td>比较相邻元素，若顺序错误则交换，重复此过程直到无序元素为止</td><td>O(n^2)</td><td>O(n^2)</td><td>O(n)</td><td>O(1)</td></tr><tr><td>选择排序</td><td>从未排序部分选择最小（或最大）元素，与未排序部分的第一个元素交换</td><td>O(n^2)</td><td>O(n^2)</td><td>O(n^2)</td><td>O(1)</td></tr><tr><td>插入排序</td><td>将每个元素插入到已排序部分的适当位置</td><td>O(n^2)</td><td>O(n^2)</td><td>O(n)</td><td>O(1)</td></tr><tr><td>归并排序</td><td>将数组分成两部分分别排序，然后合并已排序的部分</td><td>O(n log n)</td><td>O(n log n)</td><td>O(n log n)</td><td>O(n)</td></tr><tr><td>快速排序</td><td>选择基准元素，将小于基准的元素放在左边，大于基准的元素放在右边，递归排序</td><td>O(n log n)</td><td>O(n^2)</td><td>O(n log n)</td><td>O(log n)</td></tr><tr><td>堆排序</td><td>构建最大堆，将堆顶元素与末尾元素交换并调整堆，重复此过程</td><td>O(n log n)</td><td>O(n log n)</td><td>O(n log n)</td><td>O(1)</td></tr><tr><td>计数排序</td><td>统计每个元素出现的次数，然后按顺序输出</td><td>O(n + k)</td><td>O(n + k)</td><td>O(n + k)</td><td>O(k)</td></tr><tr><td>桶排序</td><td>将元素分布到不同的桶中，每个桶内分别排序，再合并</td><td>O(n + k)</td><td>O(n^2)</td><td>O(n)</td><td>O(n + k)</td></tr><tr><td>基数排序</td><td>依次按位（从最低位到最高位或相反）进行排序</td><td>O(nk)</td><td>O(nk)</td><td>O(nk)</td><td>O(n + k)</td></tr></tbody></table><p>贴上一张 <a href="https://www.hello-algo.com/chapter_sorting/summary/#1" target="_blank" rel="noreferrer">hello 算法</a>的图</p><p><img src="https://www.hello-algo.com/chapter_sorting/summary.assets/sorting_algorithms_comparison.png" alt="alt text"></p>',6),e=[o];function s(l,h,O,m,i,_){return r(),d("div",null,e)}const p=t(n,[["render",s]]);export{g as __pageData,p as default};
